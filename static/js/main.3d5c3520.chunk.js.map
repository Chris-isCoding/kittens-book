{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","kittens","map","kitten","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","error","errorInfo","this","setState","whiteSpace","toString","componentStack","React","Component","App","useState","setKittens","search","setSearch","fetchError","setFetchError","useEffect","a","fetch","response","ok","Error","json","users","message","fetchUsers","filteredKittens","filter","toLowerCase","includes","color","textAlign","backgroundColor","event","target","value","trim","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAeeA,EAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,GAAhB,OACX,sBAAKC,UAAU,qDAAf,UACE,qBACEC,IAAI,oCACJC,IAAG,+BAA0BH,EAA1B,4BAEL,gCACE,6BAAKF,IACL,4BAAIC,WCMKK,EAbE,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACf,8BACGA,EAAQC,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAEEP,GAAIO,EAAOP,GACXF,KAAMS,EAAOT,KACbC,MAAOQ,EAAOR,OAHTQ,EAAOP,UCMLQ,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAH,OAChB,qBAAKR,UAAU,MAAf,SACE,uBACEA,UAAU,MACVS,KAAK,SACLC,YAAY,iBACZC,SAAUH,OCEDI,EARA,SAACC,GAAD,OACb,qBACEC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SADlE,SAGGJ,EAAMK,Y,6BC8BIC,E,kDAjCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAAEC,MAAO,KAAMC,UAAW,MAF3B,E,qDAKd,SAAkBD,EAAOC,GAEvBC,KAAKC,SAAS,CACZH,MAAOA,EACPC,UAAWA,M,oBAKf,WACE,OAAIC,KAAKH,MAAME,UAGX,gCACE,uDACA,0BAASR,MAAO,CAAEW,WAAY,YAA9B,UACGF,KAAKH,MAAMC,OAASE,KAAKH,MAAMC,MAAMK,WACtC,uBACCH,KAAKH,MAAME,UAAUK,qBAMvBJ,KAAKV,MAAMK,a,GA9BMU,IAAMC,WCsDnBC,MAlDf,WACE,MAA8BC,mBAAS,IAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAAoCH,mBAAS,MAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,YACQ,uCAAG,8BAAAC,EAAA,+EAEQC,MACrB,8CAHa,WAETC,EAFS,QAKDC,GALC,sBAKS,IAAIC,MAAM,4BALnB,uBAMKF,EAASG,OANd,OAMTC,EANS,OAOfZ,EAAWY,GAPI,kDASfR,EAAc,KAAIS,SATH,0DAAH,qDAYhBC,KACC,IAEH,IAIMC,EAAkB3C,EAAQ4C,QAAO,SAAC1C,GAAD,OACrCA,EAAOT,KAAKoD,cAAcC,SAASjB,MAGrC,OAAOE,EACL,oBACErB,MAAO,CACLqC,MAAO,MACPC,UAAW,SACXC,gBAAiB,cAJrB,0BAMYlB,KAEZ,0BAASnC,UAAU,KAAnB,UACE,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWQ,aAnBQ,SAAC8C,GACtBpB,EAAUoB,EAAMC,OAAOC,MAAMP,cAAcQ,WAmBzC,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUrD,QAAS2C,YCrCdW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3d5c3520.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id }) => (\n  <div className='tc grow bg-light-blue br3 pa3 ma2 dib bw2 shadow-5'>\n    <img\n      alt='sweet looking cartoon kitten face'\n      src={`https://robohash.org/${id}?set=set4&size=200x200`}\n    />\n    <div>\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card.js';\n\nconst CardList = ({ kittens }) => (\n  <div>\n    {kittens.map((kitten) => (\n      <Card\n        key={kitten.id}\n        id={kitten.id}\n        name={kitten.name}\n        email={kitten.email}\n      />\n    ))}\n  </div>\n);\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => (\n  <div className=\"pa2\">\n    <input\n      className=\"pa3\"\n      type=\"search\"\n      placeholder=\"search Kittens\"\n      onChange={searchChange}\n    />\n  </div>\n);\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => (\n  <div\n    style={{ overflow: \"scroll\", border: \"5px solid black\", height: \"800px\" }}\n  >\n    {props.children}\n  </div>\n);\n\nexport default Scroll;\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor() {\n    super();\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <div>\n          <h2>Something went wrong.</h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.state.error && this.state.error.toString()}\n            <br />\n            {this.state.errorInfo.componentStack}\n          </details>\n        </div>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nfunction App() {\n  const [kittens, setKittens] = useState([]);\n  const [search, setSearch] = useState('');\n  const [fetchError, setFetchError] = useState(null);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch(\n          'https://jsonplaceholder.typicode.com/users'\n        );\n        if (!response.ok) throw new Error('Error getting users data');\n        const users = await response.json();\n        setKittens(users);\n      } catch (err) {\n        setFetchError(err.message);\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  const onSearchChange = (event) => {\n    setSearch(event.target.value.toLowerCase().trim());\n  };\n\n  const filteredKittens = kittens.filter((kitten) =>\n    kitten.name.toLowerCase().includes(search)\n  );\n\n  return fetchError ? (\n    <h2\n      style={{\n        color: 'red',\n        textAlign: 'center',\n        backgroundColor: 'whitesmoke',\n      }}\n    >{`Error: ${fetchError}`}</h2>\n  ) : (\n    <section className='tc'>\n      <h1 className='f1'>KittenBook</h1>\n      <SearchBox searchChange={onSearchChange} />\n      <Scroll>\n        <ErrorBoundary>\n          <CardList kittens={filteredKittens} />\n        </ErrorBoundary>\n      </Scroll>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}